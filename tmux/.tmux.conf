# Remap prefix key.
unbind C-b
set-option -g prefix C-t
bind-key C-t send-prefix

# Basic settings.
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on
set-option -g mouse on

# Use vi-style key bindings on the status line.
set-option -g status-keys vi

# Use vi-style key bindings in copy mode.
set-option -g mode-keys vi

# Don't rename windows automatically, since we often set them manually and don't
# want them to be overriden.
set-window-option -g automatic-rename off

# Don't synchronize window sizes between session groups.
#   TODO: Experiment with this and see if it's really needed.
set-window-option -g window-size largest
set-window-option -g aggressive-resize on

# Fix shift + arrow keys.
set-window-option -g xterm-keys on

# Fix scrolling.
bind -T copy-mode-vi WheelUpPane send -N1 -X scroll-up
bind -T copy-mode-vi WheelDownPane send -N1 -X scroll-down

# Patch terminfo to enable italics, strikethrough, underline and true color (24-bit color).
# Notes:
#  - 'default-terminal' sets the TERM variable *inside* tmux.
#  - 'terminal-overrides' refers to the TERM variable *outside* tmux.
#set -g default-terminal 'tmux-256color'
#set -ga terminal-overrides ',alacritty*:Tc,*:U8=0'
set -ga terminal-overrides ',xterm-kitty:Tc,*:U8=0'

# Smart pane switching with awareness of Vim & Emacs.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"
is_emacs="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(emacs)(client|-[\\d\\.])?|fzf)$'"
bind-key -n C-h if-shell "$is_vim || $is_emacs" "send-keys C-h"  "select-pane -L"  # pass C-h to emacs
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n btab if-shell "$not_tmux" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi btab select-pane -l

# Session shortcuts.
bind-key k switch-client -p
bind-key j switch-client -n
bind-key s run "tmux new-window -n fzf-tmux-session '/usr/bin/env zsh -i ~/.scripts/tx-switch-session.sh'"  # fuzzy-find session
bind-key w run "tmux new-window -n fzf-tmux-window '/usr/bin/env zsh -i ~/.scripts/tx-switch-window.sh'"    # fuzzy-find window

# Speed dial.
bind-key 1 run-shell "/usr/bin/env zsh ~/.scripts/tx-speed-dial.sh -g 1"
bind-key 2 run-shell "/usr/bin/env zsh ~/.scripts/tx-speed-dial.sh -g 2"
bind-key 3 run-shell "/usr/bin/env zsh ~/.scripts/tx-speed-dial.sh -g 3"
bind-key 4 run-shell "/usr/bin/env zsh ~/.scripts/tx-speed-dial.sh -g 4"
bind-key 5 run-shell "/usr/bin/env zsh ~/.scripts/tx-speed-dial.sh -g 5"
bind-key 6 run-shell "/usr/bin/env zsh ~/.scripts/tx-speed-dial.sh -g 6"
bind-key 7 run-shell "/usr/bin/env zsh ~/.scripts/tx-speed-dial.sh -g 7"
bind-key 8 run-shell "/usr/bin/env zsh ~/.scripts/tx-speed-dial.sh -g 8"
bind-key 9 run-shell "/usr/bin/env zsh ~/.scripts/tx-speed-dial.sh -g 9"
bind-key 0 run-shell "/usr/bin/env zsh ~/.scripts/tx-speed-dial.sh -g 10"

# Quit.
bind-key Q kill-session

# Window shortcuts.
bind-key t new-window -c '#{pane_current_path}'
bind-key q kill-window
bind-key ^ last-window
bind-key & run-shell "~/.scripts/tx-alternate-session.sh"
bind-key h select-window -p
bind-key l select-window -n
bind-key H swap-window -t -1
bind-key L swap-window -t +1

# Panes.
bind-key | split-window -h -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'
#bind-key btab split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'
bind-key x run-shell "tmux kill-pane ; ~/.scripts/tx-update-main-pane-dims.sh -w 50 -h 80"
bind-key o kill-pane -a                                             # kill all but current pane ("only" pane)
bind-key z resize-pane -Z                                           # zoom the pane
bind-key -n C-z resize-pane -Z                                      # (global) zoom the pane
bind-key up swap-pane -U                                            # swap pane upwards in index
bind-key down swap-pane -D                                          # swap pane downwards in index
bind-key b break-pane -d                                            # break pane into its own window without following it

                                                                    # Layouts.
bind-key space select-layout -n                                     # cycle layouts
bind-key = select-layout \
  \; run-shell "~/.scripts/tx-update-main-pane-dims.sh -w 50 -h 80" # refresh the layout
bind-key u select-layout -o                                         # revert to previous layout (undo layout)
bind-key enter swap-pane -d -t .1                                   # promote current pane -> main pane
bind-key m run-shell "~/.scripts/tx-toggle-main-pane-layout.sh"     # toggle 'main-horizontal' or 'main-vertical'

# After creating or removing a pane, refresh the current layout.
set-hook -g after-split-window "run-shell '~/.scripts/tx-update-main-pane-dims.sh -w 50 -h 80'"

# 1/5/2020 -
#   The following hooks don't seem to work, so I modified the '<prefix> x' binding above.
# set-hook -g after-kill-pane "run-shell '~/.scripts/tx-update-main-pane-dims.sh -w 50 -h 80'"
# set-hook -g pane-exited "run-shell '~/.scripts/tx-update-main-pane-dims.sh -w 50 -h 80'"

# Select the default layout for new windows.
# 1/6/2020 -
#   Doesn't seem to be working.
set-hook -g after-new-window "select-layout -t.1 main-vertical"

# Use vi-style key bindings for copy/paste.
#   Currently MacOSX-dependent.
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Disable Escape timeout (messes with Vim).
set-option -g escape-time 0

# Begin plugins.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
#set -g @plugin 'Kraust/base16-tmux'

# Plugin options.
set -g @resurrect-dir '$HOME/.local/share/tmux/resurrect'
set -g @resurrect-strategy-vim 'session'  # restore Vim sessions

# Theme/styling.
#   Uncomment one of the below two lines to use either tmuxline or base16 as the theme source.
#source-file $HOME/.tmux/tmuxline_theme
#source-file -q "${TMUX_PLUGIN_MANAGER_PATH}/base16-tmux/base16.tmuxtheme"

# Visual customizations should go after the theme loads...

# Pane status.
set-option -g pane-border-status top
set-option -g pane-border-format '#{?pane_active,#[fg=colour253],}#P:#{?pane_active,#[bg=colour04 fg=colour00 bold italics],} #{pane_current_command} #[default]'

# Status update interval
set -g status-interval 1

# Basic status bar colors
set -g status-style 'fg=colour07,bg=colour08'

# Left side of status bar
set -g status-left-style ''
set -g status-left-length 150
set -g status-left "#[fg=colour08,bg=colour05] #(whoami)-#S #[default]"

# Right side of status bar
set -g status-right-length 150
set -g status-right "#{prefix_highlight}#{cpu_bg_color}#{cpu_fg_color} #{cpu_percentage} #{cpu_icon} #[fg=colour07]%a %m/%d %l:%M %p #{online_status} ~BAT #{battery_percentage}"

# Window status
set -g window-status-format '#{?window_bell_flag,#[fg=red] ,} ❬#I❭ #W '
set -g window-status-current-format '#[fg=colour00,bg=colour06] <#I> #[bold italics]#W #[default]'

# Current window status
set -g window-status-current-style default

# Window with activity status
set -g window-status-activity-style default

# Window separator
set -g window-status-separator ""

# Window status alignment
set -g status-justify left

# Pane border
set -g pane-border-style 'bg=colour08,fg=colour07'

# Active pane border
set -g pane-active-border-style 'bg=colour08,fg=colour07'

# Pane number indicator
set -g display-panes-colour default
set -g display-panes-active-colour default

# Clock mode
set -g clock-mode-colour colour08
set -g clock-mode-style 12

# Message
set -g message-style 'bg=colour11,fg=colour00'

# Command message
set -g message-command-style 'bg=colour08,fg=colour07'

# Mode
set -g mode-style 'bg=colour08,fg=colour07'

# Window status & visual bell.
set-option -g monitor-bell on
set-option -g visual-bell on
set-option -g bell-action other
set -g @prefix_highlight_fg 'colour253'
set -g @prefix_highlight_bg 'colour13'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=colour253,bg=colour13'
set -g @cpu_low_fg_color '#[fg=colour46]'
set -g @cpu_medium_fg_color '#[fg=colour226]'
set -g @cpu_high_fg_color '#[fg=colour15]'
set -g @cpu_low_bg_color '#[bg=colour08]'
set -g @cpu_medium_bg_color '#[bg=colour08]'
set -g @cpu_high_bg_color '#[bg=colour08]'
set -g @online_icon '~ONLINE'
set -g @offline_icon '~OFFLINE'
set -g @batt_icon_status_charged '~POWER'
set -g @batt_icon_status_charging '~CHARGE'
set -g @batt_icon_status_discharging '~BATT~'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
