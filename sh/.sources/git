#!/usr/bin/env bash

# fzfgitlog - git commit browser
#   source: https://github.com/junegunn/fzf/issues/150
fzfgitlog() {
  local out sha q
  while out=$(
      git log --graph --color=always \
          --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" |
      fzf --ansi --multi --no-sort --reverse --query="$q" --print-query --header="[[git show]]"); do
    q=$(head -1 <<< "$out")
    while read sha; do
      [ -n "$sha" ] && git show --color=always $sha | less -R
    done < <(sed '1d;s/^[^a-z0-9]*//;/^$/d' <<< "$out" | awk '{print $1}')
  done
}

# fgst - pick files from `git status -s` 
is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

# fzfgitstatus - git status
#   source: https://github.com/junegunn/fzf/wiki/examples
fzfgitstatus() {
  # "Nothing to see here, move along"
  is_in_git_repo || return

  local cmd="${FZF_CTRL_T_COMMAND:-"command git status -s"}"

  eval "$cmd" \
    | FZF_DEFAULT_OPTS="--reverse $FZF_CTRL_T_OPTS" fzf -m "$@" --header="[[git status]]" \
    | awk '{print $2}' \
    | while read -r item; do
        [ -n "$item" ] && git diff --color=always $item | less -R
      done
  echo
}

git_info() {
  # Meant for use with $PS1.
  # Will not work unless setopt BASH_REMATCH.

  project_root=$(git rev-parse --show-toplevel 2> /dev/null)
  
  if [[ -z $project_root ]]; then
    return
  fi

  current_branch=$(git branch --show-current) 

  git diff-index --quiet HEAD -- || uncommitted_changes=true

  styled_branch_name="::\e[1;33m$current_branch\e[0m"

  if [[ ! $uncommitted_changes ]]; then 
    printf $styled_branch_name 
    return
  fi

  stats=$(git diff --stat)

  if [[ -z $stats ]]; then
    printf $styled_branch_name
    return
  fi

  [[ $stats =~ "[[:digit:]]+ insertion" ]] && insertions=${BASH_REMATCH[1]/ insertion/""}
  [[ $stats =~ "[[:digit:]]+ deletion" ]] && deletions=${BASH_REMATCH[1]/ deletion/""}

  if [[ ! -z $insertions && ! -z $deletions ]]; then
    printf "$styled_branch_name::<\e[1;32m+\e[0m$insertions\e[36m|\e[0m\e[1;31m-\e[0m$deletions>"
  elif [[ ! -z $insertions && -z $deletions ]]; then
    printf "$styled_branch_name::<\e[1;32m+\e[0m$insertions>"
  elif [[ -z $insertions && ! -z $deletions ]]; then
    printf "$styled_branch_name::<\e[1;31m-\e[0m$deletions>"
  else
    printf "$styled_branch_name::<\e[1;32m+\e[0m$insertions\e[36m|\e[0m\e[1;31m-\e[0m$deletions>"
  fi
}


alias fgs=fzfgitstatus
alias fgl=fzfgitlog
